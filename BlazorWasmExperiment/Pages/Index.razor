@page "/"

<div class="container">
    <div class="h2 my-4 text-center">The Witch Stopper!</div>
    <div class="row justify-content-center">
        <div class="col-sm-4">
            <h5>Person A</h5>
            <div class="row">
                <div class="col">
                    <div class="form-group">
                        <label for="txtPA_AgeOfDeath">Age Of Death</label>
                        <input @bind="PA_AgeOfDeath" class="form-control" id="txtPA_AgeOfDeath">
                    </div>
                </div>
                <div class="col">
                    <div class="form-group">
                        <label for="txtPA_YearOfDeath">Year of Death</label>
                        <input @bind="PA_YearOfDeath" class="form-control" id="txtPA_YearOfDeath">
                    </div>
                </div>
            </div>
            <h5>Person B</h5>
            <div class="row">
                <div class="col">
                    <div class="form-group">
                        <label for="txtPB_AgeOfDeath">Age Of Death</label>
                        <input @bind="PB_AgeOfDeath" class="form-control" id="txtPB_AgeOfDeath">
                    </div>
                </div>
                <div class="col">
                    <div class="form-group">
                        <label for="txtPB_YearOfDeath">Year of Death</label>
                        <input @bind="PB_YearOfDeath" class="form-control" id="txtPB_YearOfDeath">
                    </div>
                </div>
            </div>
            <div class="mt-2">
                <button type="button" @onclick="CalculateAverageVictims" class="btn btn-primary btn-block">Calculate!</button>
            </div>
            <div class="mt-3">
                Result : @res
            </div>
        </div>
    </div>
</div>

@code {
    private int PA_AgeOfDeath;
    private int PA_YearOfDeath;
    private int PB_AgeOfDeath;
    private int PB_YearOfDeath;
    private decimal res;

    private void CalculateAverageVictims()
    {
        // let's create Person objects
        var personA = new Person(PA_AgeOfDeath, PA_YearOfDeath);
        var personB = new Person(PB_AgeOfDeath, PB_YearOfDeath);

        // check if any of them has invalid value
        if (!personA.IsValid() || !personB.IsValid())
        {
            res = -1;
            return;
        }

        // find out the total victims on each persons born year
        var victimsOnBornYearA = CountVictimsOnYear(personA.GetBornYear());
        var victimsOnBornYearB = CountVictimsOnYear(personB.GetBornYear());

        // set the average
        res = (victimsOnBornYearA + victimsOnBornYearB) / 2;

    }
    decimal CountVictimsOnYear(int year)
    {

        int total = 0;
        List<int> fibNumbers = new List<int> { 0, 1 };
        int yearCounted = 2; // start counting from year 2, if year 1 then it will just skip the while loop

        // generate fibonacci numbers based on the year parameter
        while (yearCounted <= year)
        {
            var previousNum = fibNumbers[fibNumbers.Count - 2];
            var currentNum = fibNumbers[fibNumbers.Count - 1];
            fibNumbers.Add(previousNum + currentNum);
            yearCounted++;
        }

        // sum all the numbers
        total = fibNumbers.Sum();

        return total;

    }
}
